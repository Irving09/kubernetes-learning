kind: VirtualService
apiVersion: networking.istio.io/v1alpha3
metadata:
  # Just a name for this virtual service - in other words, can call this anything you like
  name: {{ .Values.app.name | default .Release.Name }}
  # typically in the same namespace as the service
  namespace: default
spec:
  gateways:
    - hello-kubernetes-gateway
  hosts:
    # This is the fully qualified service name
    # DNS name defined by the kubernetes service
    # that we are applying routing rules for
    # - {{ .Release.Name }}.default.svc.cluster.local
    - "*" # copy the value in the gateway hosts In a production environment,
          # place the incoming host we applying proxy rules here
  http:
    - name: {{ .Values.app.name | default .Release.Name }}-routes
      # First match if true, gets precedence
      match:
        - uri:
            prefix: "/"
      # Will route traffic to the following kubernetes services
      route:
      # with weighted routing, traffic will go to the pods subset labeled green
      - destination:
          host: {{ .Values.app.name }}.default.svc.cluster.local
          port:
            number: 80
          subset: green # Reference the name defined in the destination rule for a particular subset
        weight: 100
      - destination:
          host: {{ .Values.app.name }}.default.svc.cluster.local
          port:
            number: {{ .Values.app.port }}
          subset: blue  # Reference the name defined in the destination rule for a particular subset
        weight: 0
    # First match if true, next in precedence
    - name: {{ .Values.app.name | default .Release.Name }}-retry-routes
      match:
        - uri:
            prefix: "/{{ .Values.app.endpointPrefix }}"
      # will route traffic to the following kubernetes services with a configured retry policy
      retries:
        attempts: 3
        perTryTimeout: 2s
        retryOn: gateway-error,connect-failure,refused-stream,5xx
      route:
        - destination:
            host: {{ .Values.app.name }}.default.svc.cluster.local
            port:
              number: 80
            subset: green # Reference the name defined in the destination rule for a particular subset
          weight: 100
        - destination:
            host: {{ .Values.app.name }}.default.svc.cluster.local
            port:
              number: 80
            subset: blue  # Reference the name defined in the destination rule for a particular subset
          weight: 0
          # The following code currently doesnt work alongside with retry policy
          # See the issue link: https://github.com/istio/istio/issues/13705
    {{/*      fault:*/}}
    {{/*          abort:*/}}
    {{/*              httpStatus: 503*/}}
    {{/*              percentage:*/}}
    {{/*                  value: 50*/}}
---

# A configuration of a loadbalancer for a particular service
# Define which pods should be part of each subset
kind: DestinationRule
apiVersion: networking.istio.io/v1alpha3
metadata:
  name: {{ .Values.app.name | default .Release.Name }}
  namespace: default
spec:
  # Find a service with this fully qualified service name
  host: {{ .Values.app.name }}.default.svc.cluster.local
  trafficPolicy:
    loadBalancer:
      simple: LEAST_CONN
  subsets:
    - labels:          # and select all the pods that have the following labels
        version: green # with this key value pair
      name: green      # and assign a name for this subset
    - labels:
        version: blue
      name: blue